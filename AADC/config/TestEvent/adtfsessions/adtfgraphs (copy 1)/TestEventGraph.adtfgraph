<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>TestEventGraph</name>
  <graphs>
    <graph>
      <name>TestEventFilterGraph</name>
      <filters>
        <filter>
          <name>MarkerDetectorNew</name>
          <class_id>marker_detector_new.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>road_sign_ext</name>
            </pin>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>feedbackOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>IntersectionDetectorFilter</name>
          <class_id>intersection_detector_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>RoadSignExtInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>laserScannerInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
            <pin>
              <name>localGoalOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Driver Module</name>
          <class_id>driver_module.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>action_from_scm</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_to_scm</name>
            </pin>
            <pin>
              <name>driver_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>video_display_marker_detector</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>TimerFilter</name>
          <class_id>timer_filters.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>action</name>
            </pin>
            <pin>
              <name>time_trigger_pin</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>TimerFilter Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>StateControlManagement</name>
          <class_id>state_control_management.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>feedbackMarkerDetectorIn</name>
            </pin>
            <pin>
              <name>feedbackIntersectionDetectorIn</name>
            </pin>
            <pin>
              <name>TriggerPin</name>
            </pin>
            <pin>
              <name>feedbackSelectSpeedIn</name>
            </pin>
            <pin>
              <name>feedbackTimerIn</name>
            </pin>
            <pin>
              <name>feedbackJuryCommIn</name>
            </pin>
            <pin>
              <name>feedbackUltrasonicACCIn</name>
            </pin>
            <pin>
              <name>feedbackLineSpecifierIn</name>
            </pin>
            <pin>
              <name>feedbackMoveToPointIn</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>ActionTimerOut</name>
            </pin>
            <pin>
              <name>ActionMarkerDetectorOut</name>
            </pin>
            <pin>
              <name>ActionJuryCommOut</name>
            </pin>
            <pin>
              <name>ActionIntersectionDetectorOut</name>
            </pin>
            <pin>
              <name>ActionSelectSpeedOut</name>
            </pin>
            <pin>
              <name>ActionUltrasonicACCOut</name>
            </pin>
            <pin>
              <name>ActionLightControlOut</name>
            </pin>
            <pin>
              <name>ActionLineSpecifierOut</name>
            </pin>
            <pin>
              <name>ActionMoveToPointOut</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
            <pin>
              <name>inputAction</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputLines</name>
            </pin>
            <pin>
              <name>outputFeedback</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cLightControl</name>
          <class_id>light_control.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>headLightOutput</name>
            </pin>
            <pin>
              <name>reverseLightOutput</name>
            </pin>
            <pin>
              <name>brakeLightOutput</name>
            </pin>
            <pin>
              <name>turnRightLightOutput</name>
            </pin>
            <pin>
              <name>turnLeftLightOutput</name>
            </pin>
            <pin>
              <name>hazardLightOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SelectSpeedFilter</name>
          <class_id>select_speed.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ActionStructInput</name>
            </pin>
            <pin>
              <name>LaneDetectionSpeed</name>
            </pin>
            <pin>
              <name>LaneDetectionSteering</name>
            </pin>
            <pin>
              <name>MoveToPointSpeed</name>
            </pin>
            <pin>
              <name>MoveToPointSteering</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>OutputFeedback</name>
            </pin>
            <pin>
              <name>OutputSpeed</name>
            </pin>
            <pin>
              <name>OutputSteeringAngle</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
            <pin>
              <name>car_pose</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cPIDController</name>
          <class_id>new_pid_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measuredSpeed</name>
            </pin>
            <pin>
              <name>setPoint</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>manipulatedSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cMoveToPoint</name>
          <class_id>move_to_point.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>car_pose_input</name>
            </pin>
            <pin>
              <name>sm_action_input</name>
            </pin>
            <pin>
              <name>goal_pose_input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>speed_controller_output</name>
            </pin>
            <pin>
              <name>steering_controller_output</name>
            </pin>
            <pin>
              <name>feedback_struct_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_struct</name>
          <portname>jury_struct</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>maneuver_list</name>
          <portname>maneuver_list</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>trigger_pin</name>
          <portname>trigger_pin</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>left_wheel_in</name>
          <portname>left_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>right_wheel_in</name>
          <portname>right_wheel_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>driver_struct</name>
          <portname>driver_struct</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>headlight_out</name>
          <portname>headlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>reverselight_out</name>
          <portname>reverselight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>brakelight_out</name>
          <portname>brakelight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>turnrightlight_out</name>
          <portname>turnrightlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>turnleftlight_out</name>
          <portname>turnleftlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>hazardlight_out</name>
          <portname>hazardlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>road_sign</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_driverModule</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_from_fisheye_undistortion</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_from_marker_detector</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_marker_detector</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_ISD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_actionStop</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_TF</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_out_timer</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_markerDetector</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_isd</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_juryComm</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_action_stop</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_LC</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laserscanner_relais1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_laneDetection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_laneDetection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_from_LD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_from_LD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>mtp_action_ss</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>goalpose_from_isd</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>mtp_fb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>MarkerDetectorNew.road_sign_ext_road_sign.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>road_sign</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>road_sign._IntersectionDetectorFilter.RoadSignExtInput</name>
          <source_connector_path>
            <connector/>
            <component>road_sign</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>RoadSignExtInput</connector>
            <component>IntersectionDetectorFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_struct._Driver Module.jury_struct</name>
          <source_connector_path>
            <connector/>
            <component>jury_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuver_list._Driver Module.maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.feedback_to_scm_feedback_driverModule.</name>
          <source_connector_path>
            <connector>feedback_to_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_driverModule</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.driver_struct_driver_struct.</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driver_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_video_from_fisheye_undistortion.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._MarkerDetectorNew.input</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.output_video_from_marker_detector.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>video_from_marker_detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._IntersectionDetectorFilter.laserScannerInput</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserScannerInput</connector>
            <component>IntersectionDetectorFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.feedbackOutput_feedback_marker_detector.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_marker_detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>IntersectionDetectorFilter.feedbackOutput_feedback_ISD.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>IntersectionDetectorFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_ISD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_marker_detector._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>video_from_marker_detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>video_display_marker_detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TimerFilter.feedback_feedback_TF.</name>
          <source_connector_path>
            <connector>feedback</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_TF</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._TimerFilter.TimerFilter Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TimerFilter Constructor</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_out_timer._TimerFilter.action</name>
          <source_connector_path>
            <connector/>
            <component>action_out_timer</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_marker_detector._StateControlManagement.feedbackMarkerDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_marker_detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMarkerDetectorIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_ISD._StateControlManagement.feedbackIntersectionDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_ISD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackIntersectionDetectorIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>trigger_pin._StateControlManagement.TriggerPin</name>
          <source_connector_path>
            <connector/>
            <component>trigger_pin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TriggerPin</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_actionStop._StateControlManagement.feedbackSelectSpeedIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_actionStop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackSelectSpeedIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionTimerOut_action_out_timer.</name>
          <source_connector_path>
            <connector>ActionTimerOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_out_timer</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionMarkerDetectorOut_action_markerDetector.</name>
          <source_connector_path>
            <connector>ActionMarkerDetectorOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_markerDetector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionJuryCommOut_action_juryComm.</name>
          <source_connector_path>
            <connector>ActionJuryCommOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_juryComm</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionIntersectionDetectorOut_action_isd.</name>
          <source_connector_path>
            <connector>ActionIntersectionDetectorOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_isd</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionSelectSpeedOut_action_action_stop.</name>
          <source_connector_path>
            <connector>ActionSelectSpeedOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_action_stop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_TF._StateControlManagement.feedbackTimerIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_TF</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackTimerIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_juryComm._Driver Module.action_from_scm</name>
          <source_connector_path>
            <connector/>
            <component>action_juryComm</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_from_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_driverModule._StateControlManagement.feedbackJuryCommIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_driverModule</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackJuryCommIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_markerDetector._MarkerDetectorNew.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_markerDetector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_isd._IntersectionDetectorFilter.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_isd</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>IntersectionDetectorFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionLightControlOut_action_LC.</name>
          <source_connector_path>
            <connector>ActionLightControlOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_LC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_LC._cLightControl.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_LC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.headLightOutput_headlight_out.</name>
          <source_connector_path>
            <connector>headLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>headlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.reverseLightOutput_reverselight_out.</name>
          <source_connector_path>
            <connector>reverseLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>reverselight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.brakeLightOutput_brakelight_out.</name>
          <source_connector_path>
            <connector>brakeLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>brakelight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.turnRightLightOutput_turnrightlight_out.</name>
          <source_connector_path>
            <connector>turnRightLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turnrightlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.turnLeftLightOutput_turnleftlight_out.</name>
          <source_connector_path>
            <connector>turnLeftLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turnleftlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.hazardLightOutput_hazardlight_out.</name>
          <source_connector_path>
            <connector>hazardLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>hazardlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_action_stop._SelectSpeedFilter.ActionStructInput</name>
          <source_connector_path>
            <connector/>
            <component>action_action_stop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ActionStructInput</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputFeedback_feedback_actionStop.</name>
          <source_connector_path>
            <connector>OutputFeedback</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_actionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._laserscanner_relais1.</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laserscanner_relais1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laserscanner_relais1._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laserscanner_relais1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionLineSpecifierOut_action_laneDetection.</name>
          <source_connector_path>
            <connector>ActionLineSpecifierOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_laneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_laneDetection._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>action_laneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputFeedback_feedback_laneDetection.</name>
          <source_connector_path>
            <connector>outputFeedback</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_laneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_laneDetection._StateControlManagement.feedbackLineSpecifierIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_laneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackLineSpecifierIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_speed_from_LD.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_from_LD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_from_LD._SelectSpeedFilter.LaneDetectionSpeed</name>
          <source_connector_path>
            <connector/>
            <component>speed_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>LaneDetectionSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_steering_from_LD.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_from_LD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_from_LD._SelectSpeedFilter.LaneDetectionSteering</name>
          <source_connector_path>
            <connector/>
            <component>steering_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>LaneDetectionSteering</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputSteeringAngle_steering_out.</name>
          <source_connector_path>
            <connector>OutputSteeringAngle</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._cCarPose.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>left_wheel_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>left_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>right_wheel_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>right_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cPIDController.manipulatedSpeed_Sample Stream.</name>
          <source_connector_path>
            <connector>manipulatedSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputSpeed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>OutputSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cPIDController.setPoint</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>setPoint</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_pose_Sample Stream_3.</name>
          <source_connector_path>
            <connector>car_pose</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._cMoveToPoint.car_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>car_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._cMoveToPoint.sm_action_input</name>
          <source_connector_path>
            <connector/>
            <component>mtp_action_ss</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>sm_action_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._cMoveToPoint.goal_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>goalpose_from_isd</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>goal_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionMoveToPointOut_mtp_action_ss.</name>
          <source_connector_path>
            <connector>ActionMoveToPointOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mtp_action_ss</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>IntersectionDetectorFilter.localGoalOutput_goalpose_from_isd.</name>
          <source_connector_path>
            <connector>localGoalOutput</connector>
            <component>IntersectionDetectorFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>goalpose_from_isd</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._SelectSpeedFilter.MoveToPointSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>MoveToPointSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.speed_controller_output_Sample Stream_4.</name>
          <source_connector_path>
            <connector>speed_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._SelectSpeedFilter.MoveToPointSteering</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>MoveToPointSteering</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.steering_controller_output_Sample Stream_5.</name>
          <source_connector_path>
            <connector>steering_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cPIDController.measuredSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measuredSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>mtp_fb._StateControlManagement.feedbackMoveToPointIn</name>
          <source_connector_path>
            <connector/>
            <component>mtp_fb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMoveToPointIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.feedback_struct_output_mtp_fb.</name>
          <source_connector_path>
            <connector>feedback_struct_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mtp_fb</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>default_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>TriggerSignalGenerator</name>
          <class_id>signal_value_generator.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>trigger_pin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>left_wheel_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>right_wheel_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>driver_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>headlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>reverselight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>brakelight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turnrightlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turnleftlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>hazardlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>reverse_light</name>
            </pin>
            <pin>
              <name>brake_light</name>
            </pin>
            <pin>
              <name>turn_signal_right</name>
            </pin>
            <pin>
              <name>turn_signal_left</name>
            </pin>
            <pin>
              <name>hazard_light</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>TriggerSignalGenerator.output_Filter Graph Dock.trigger_pin</name>
          <source_connector_path>
            <connector>output</connector>
            <component>TriggerSignalGenerator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger_pin</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.vide_rgb</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_Filter Graph Dock.jury_struct</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_Filter Graph Dock.maneuver_list</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Binding Proxy.</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy._Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.driver_struct_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_scanner</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.headlight_out_Arduino Actuator.head_light</name>
          <source_connector_path>
            <connector>headlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.reverselight_out_Arduino Actuator.reverse_light</name>
          <source_connector_path>
            <connector>reverselight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>reverse_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.brakelight_out_Arduino Actuator.brake_light</name>
          <source_connector_path>
            <connector>brakelight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>brake_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turnrightlight_out_Arduino Actuator.turn_signal_right</name>
          <source_connector_path>
            <connector>turnrightlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_right</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turnleftlight_out_Arduino Actuator.turn_signal_left</name>
          <source_connector_path>
            <connector>turnleftlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_left</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.hazardlight_out_Arduino Actuator.hazard_light</name>
          <source_connector_path>
            <connector>hazardlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>hazard_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_Filter Graph Dock.imu_in</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Filter Graph Dock.left_wheel_in</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Filter Graph Dock.right_wheel_in</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
