<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>default_graph</name>
  <graphs>
    <graph>
      <name>default_filter_graph</name>
      <filters>
        <filter>
          <name>cMoveToPoint</name>
          <class_id>move_to_point.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>car_pose_input</name>
            </pin>
            <pin>
              <name>sm_action_input</name>
            </pin>
            <pin>
              <name>goal_pose_input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>speed_controller_output</name>
            </pin>
            <pin>
              <name>steering_controller_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>outputCarPose</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>speed_controller</name>
            </pin>
            <pin>
              <name>reset_relative_pose</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_pose</name>
            </pin>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cPIDController</name>
          <class_id>new_pid_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measuredSpeed</name>
            </pin>
            <pin>
              <name>setPoint</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>manipulatedSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cPIDController_1</name>
          <class_id>new_pid_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measuredSpeed</name>
            </pin>
            <pin>
              <name>setPoint</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>manipulatedSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>cp_pos_mtp</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_mtp</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>cp_pos_mtp._cMoveToPoint.car_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>cp_pos_mtp</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>car_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_mtp._cMoveToPoint.sm_action_input</name>
          <source_connector_path>
            <connector/>
            <component>action_mtp</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>sm_action_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_action_mtp.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_mtp</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_pose_cp_pos_mtp.</name>
          <source_connector_path>
            <connector>car_pose</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>cp_pos_mtp</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.speed_controller_output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>speed_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._OutputLimiter.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._cCarPose.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputCarPose_Sample Stream_3.</name>
          <source_connector_path>
            <connector>outputCarPose</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._cMoveToPoint.goal_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>goal_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cPIDController.manipulatedSpeed_Sample Stream.</name>
          <source_connector_path>
            <connector>manipulatedSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cPIDController.measuredSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measuredSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cPIDController.setPoint</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>setPoint</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.steering_controller_output_steering_out.</name>
          <source_connector_path>
            <connector>steering_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OutputLimiter.car_speed_speed_out.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cPIDController_1.manipulatedSpeed_Sample Stream.</name>
          <source_connector_path>
            <connector>manipulatedSpeed</connector>
            <component>cPIDController_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cPIDController_1.measuredSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measuredSpeed</connector>
            <component>cPIDController_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cPIDController_1.setPoint</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>setPoint</connector>
            <component>cPIDController_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>emergency_test</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
            <pin>
              <name>steering_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
            <pin>
              <name>car_steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>laser_in</name>
          <portname>laser_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller.speed_Sample Stream.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_Sample Stream_2.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._Sample Stream_3.</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._Sample Stream_4.</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>xiangfei_US</name>
      <filters>
        <filter>
          <name>UltrasonicMeanFilter</name>
          <class_id>ultrasonic_mean_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>UltrasonicInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>UltrasonicMeanOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_in</name>
          <portname>laser_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>us_in._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._UltrasonicMeanFilter.UltrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicInput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicMeanFilter.UltrasonicMeanOutput_Sample Stream_1.</name>
          <source_connector_path>
            <connector>UltrasonicMeanOutput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_3.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>xiangfei_ISD</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>MarkerDetectorNew</name>
          <class_id>marker_detector_new.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>road_sign_ext</name>
            </pin>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SelectSpeedFilter1</name>
          <class_id>select_speed.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>LaneDetectionSpeed</name>
            </pin>
            <pin>
              <name>ActionStructInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>OutputSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_in</name>
          <portname>laser_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_9</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_11</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>video_rgb._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._MarkerDetectorNew.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.road_sign_ext_Sample Stream_2.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.output_Sample Stream_5.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._MarkerDetectorNew.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._Sample Stream_8.</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right_in._Sample Stream_9.</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._Sample Stream_10.</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_3.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._SelectSpeedFilter1.LaneDetectionSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>LaneDetectionSpeed</connector>
            <component>SelectSpeedFilter1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._SelectSpeedFilter1.ActionStructInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ActionStructInput</connector>
            <component>SelectSpeedFilter1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter1.OutputSpeed_Sample Stream_7.</name>
          <source_connector_path>
            <connector>OutputSpeed</connector>
            <component>SelectSpeedFilter1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>steering_test</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>right_wheel_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller.steering_Sample Stream.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>LaneDetection</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>transformedVideo</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ROI Video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>mask</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
            <pin>
              <name>laserOut</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugMaskVideo</name>
            </pin>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>basler_in</name>
          <portname>cam_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_in</name>
          <portname>laser_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steerout</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>basler_out</name>
          <portname>basler_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>laser_out</name>
          <portname>laser_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>us_out</name>
          <portname>us_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ActionStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>SpeedStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>LaneDetectionStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>fisheye_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>basler_in._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>basler_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._steerout.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steerout</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream_5.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ActionStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._UltrasonicACC.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>LaneDetectionStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>basler_in._basler_out.</name>
          <source_connector_path>
            <connector/>
            <component>basler_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>basler_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._laser_out.</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laser_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._us_out.</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>us_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._ROI Video.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ROI Video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._mask.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>mask</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._speed.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_Sample Stream_6.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SpeedStream._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>SpeedStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.laserOut_Sample Stream_5.</name>
          <source_connector_path>
            <connector>laserOut</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ActionStream._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>ActionStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_fisheye_stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>fisheye_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>fisheye_stream._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>fisheye_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugMaskVideo_Sample Stream_3.</name>
          <source_connector_path>
            <connector>outputDebugMaskVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_4.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._transformedVideo.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>transformedVideo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>recording_files</name>
      <filters>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>laser_input</name>
          <portname>laser_input</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_input</name>
          <portname>us_input</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>laser_output</name>
          <portname>laser_output</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>us_output</name>
          <portname>us_output</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>laser_input._laser_output.</name>
          <source_connector_path>
            <connector/>
            <component>laser_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laser_output</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_input._us_output.</name>
          <source_connector_path>
            <connector/>
            <component>us_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>us_output</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_input._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_input._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>us_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_steering_out.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>test_actionStop</name>
      <filters>
        <filter>
          <name>cActionStop</name>
          <class_id>action_stop.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speedInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>speedOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Sample Stream._cActionStop.speedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speedInput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cActionStop.speedOutput_speed_out.</name>
          <source_connector_path>
            <connector>speedOutput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cActionStop.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>recordVideo</name>
      <filters>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>videoIn</name>
          <portname>cam_input</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>videoOut</name>
          <portname>cam_output</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>videoIn._videoOut.</name>
          <source_connector_path>
            <connector/>
            <component>videoIn</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>videoOut</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoIn._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>videoIn</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>acc_test</name>
      <filters>
        <filter>
          <name>UltrasonicMeanFilter</name>
          <class_id>ultrasonic_mean_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>UltrasonicInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>UltrasonicMeanOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>outputAction</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>us_input</name>
          <portname>us_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_input</name>
          <portname>laser_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>UltrasonicMeanFilter.UltrasonicMeanOutput_Sample Stream.</name>
          <source_connector_path>
            <connector>UltrasonicMeanOutput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_input._UltrasonicMeanFilter.UltrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicInput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_Sample Stream_1.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_input._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_input._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_input</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_Sample Stream_3.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream_5.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>drive_test</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller.steering_steering_output.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_speed_output.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>xiangfei_SCM</name>
      <filters>
        <filter>
          <name>Driver Module</name>
          <class_id>driver_module.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>action_from_scm</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_to_scm</name>
            </pin>
            <pin>
              <name>driver_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cActionStop</name>
          <class_id>action_stop.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>speedInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
            <pin>
              <name>speedOutput</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>TimerFilter</name>
          <class_id>timer_filters.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>time_trigger_pin</name>
            </pin>
            <pin>
              <name>action</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SCMTestCheckSpeed</name>
          <class_id>scm_test_check_speed.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>action_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>jury_in</name>
          <portname>jury_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>maneuverlist_in</name>
          <portname>maneuverlist_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>signalvalue</name>
          <portname>signalvalue</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_input</name>
          <portname>us_input</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_input</name>
          <portname>laser_input</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>temp</name>
          <portname>temp</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>driver_out</name>
          <portname>driver_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>feedback_juryComm</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_to_actionstop</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_actionstop</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_JuryComm</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>fbTF</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>jury_in._Driver Module.jury_struct</name>
          <source_connector_path>
            <connector/>
            <component>jury_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuverlist_in._Driver Module.maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuverlist_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.driver_struct_driver_out.</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driver_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.feedback_to_scm_Sample Stream_1.</name>
          <source_connector_path>
            <connector>feedback_to_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_juryComm</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Driver Module.action_from_scm</name>
          <source_connector_path>
            <connector/>
            <component>action_JuryComm</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_from_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._cActionStop.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_to_actionstop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cActionStop.feedbackOutput_Sample Stream_4.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_actionstop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cActionStop.speedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speedInput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cActionStop.speedOutput_speed_out.</name>
          <source_connector_path>
            <connector>speedOutput</connector>
            <component>cActionStop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_to_actionstop._action_JuryComm.</name>
          <source_connector_path>
            <connector/>
            <component>action_to_actionstop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_JuryComm</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_to_actionstop._TimerFilter.action</name>
          <source_connector_path>
            <connector/>
            <component>action_to_actionstop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TimerFilter.feedback_Sample Stream_1.</name>
          <source_connector_path>
            <connector>feedback</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>fbTF</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>temp._TimerFilter.time_trigger_pin</name>
          <source_connector_path>
            <connector/>
            <component>temp</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>time_trigger_pin</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_to_actionstop._SCMTestCheckSpeed.action_in</name>
          <source_connector_path>
            <connector/>
            <component>action_to_actionstop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_in</connector>
            <component>SCMTestCheckSpeed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SCMTestCheckSpeed.feedback_out_Sample Stream.</name>
          <source_connector_path>
            <connector>feedback_out</connector>
            <component>SCMTestCheckSpeed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>eempty</name>
      <filters>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_pose</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cMoveToPoint</name>
          <class_id>move_to_point.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>car_pose_input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_pose_Sample Stream.</name>
          <source_connector_path>
            <connector>car_pose</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._cMoveToPoint.car_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>car_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>xiangfei_checkBackend</name>
      <filters>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>uni_rgb</name>
          <portname>uni_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>uni_rgb._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>uni_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>PIDTEST</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cPIDController</name>
          <class_id>new_pid_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>setPoint</name>
            </pin>
            <pin>
              <name>measuredSpeed</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>manipulatedSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_Sample Stream_2.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cCarPose.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cPIDController.setPoint</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>setPoint</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._cPIDController.measuredSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measuredSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cPIDController.manipulatedSpeed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>manipulatedSpeed</connector>
            <component>cPIDController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OutputLimiter.car_speed_speed_out.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._OutputLimiter.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>measure_speed</name>
      <filters>
        <filter>
          <name>ConverterWheels</name>
          <class_id>converter_wheels.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>speed_control</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>vehicle_speed</name>
            </pin>
            <pin>
              <name>wheel_left_plaus</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>wheel_right_in._ConverterWheels.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._ConverterWheels.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_steering_out.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._ConverterWheels.speed_control</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_control</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ConverterWheels.vehicle_speed_Sample Stream.</name>
          <source_connector_path>
            <connector>vehicle_speed</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>traffic_light</name>
      <filters>
        <filter>
          <name>TrafficLightSimluator</name>
          <class_id>traffic_light_simluator.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>m_WriterDebugMaskVideo</name>
            </pin>
            <pin>
              <name>outputDebugBirdVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>TrafficLightSimluator.m_WriterDebugMaskVideo_Sample Stream_1.</name>
          <source_connector_path>
            <connector>m_WriterDebugMaskVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TrafficLightSimluator.outputDebugBirdVideo_Sample Stream.</name>
          <source_connector_path>
            <connector>outputDebugBirdVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._TrafficLightSimluator.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_2.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>laneDetectionFG</name>
      <filters>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputDebugMaskVideo</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>InputFishEye</name>
          <portname>videoIN</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laserScanner</name>
          <portname>laserIN</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>InputFishEye._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>InputFishEye</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>default_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>rgb_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>uni_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>cam_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_Filter Graph Dock.imu_in</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Filter Graph Dock.wheel_left_in</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Filter Graph Dock.wheel_right_in</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_in</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.cam_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>cam_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>recording_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>ADTFDAT File Player</name>
          <class_id>adtfdat_file_player.streaming_source.adtf.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>laser_output</name>
            </pin>
            <pin>
              <name>us_output</name>
            </pin>
            <pin>
              <name>cam_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>laser_input</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_input</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>cam_input</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>laser_output</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_output</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>cam_output</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_output</name>
            </pin>
            <pin>
              <name>us_output</name>
            </pin>
            <pin>
              <name>cam_output</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_input</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_input</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.laser_output_ADTFDAT File Recorder.laser_output</name>
          <source_connector_path>
            <connector>laser_output</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_output</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.us_output_ADTFDAT File Recorder.us_output</name>
          <source_connector_path>
            <connector>us_output</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_output</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.laser_output_Filter Graph Dock.laser_input</name>
          <source_connector_path>
            <connector>laser_output</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.us_output_Filter Graph Dock.us_input</name>
          <source_connector_path>
            <connector>us_output</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.cam_input</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>cam_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.cam_output_ADTFDAT File Recorder.cam_output</name>
          <source_connector_path>
            <connector>cam_output</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>cam_output</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.cam_output_Filter Graph Dock.cam_input</name>
          <source_connector_path>
            <connector>cam_output</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>cam_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>xiangfei_communication_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Signal Value Generator</name>
          <class_id>signal_value_generator.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Signal Value Generator_1</name>
          <class_id>signal_value_generator.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>jury_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuverlist_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>signalvalue</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_input</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_input</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>temp</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>driver_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_Filter Graph Dock.jury_in</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_Filter Graph Dock.maneuverlist_in</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuverlist_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Filter Graph Dock.Binding Proxy</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>BindingProxyOut</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.Binding Proxy_Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector>BindingProxyOut</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.driver_out_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>driver_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Signal Value Generator.output_Filter Graph Dock.signalvalue</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Signal Value Generator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>signalvalue</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_input</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_input</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_input</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Signal Value Generator_1.output_Filter Graph Dock.temp</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Signal Value Generator_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>temp</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports>
        <binding_proxy>
          <name>BindingProxyIn</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </streaming_dock_interface_in_ports>
      <streaming_dock_interface_out_ports>
        <binding_proxy>
          <name>BindingProxyOut</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </streaming_dock_interface_out_ports>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>Binh_secret_mission</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>cam_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>basler_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>basler_out</name>
            </pin>
            <pin>
              <name>laser_out</name>
            </pin>
            <pin>
              <name>us_out</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.cam_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>cam_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_in</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.basler_out_ADTFDAT File Recorder.basler_out</name>
          <source_connector_path>
            <connector>basler_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_out</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.laser_out_ADTFDAT File Recorder.laser_out</name>
          <source_connector_path>
            <connector>laser_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_out</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.us_out_ADTFDAT File Recorder.us_out</name>
          <source_connector_path>
            <connector>us_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_out</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>videoInputs</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>videoIN</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laserIN</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.videoIN</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>videoIN</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laserIN</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserIN</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
