<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>TestEventGraph</name>
  <graphs>
    <graph>
      <name>TestEventFilterGraph2</name>
      <filters>
        <filter>
          <name>MarkerDetectorNew</name>
          <class_id>marker_detector_new.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>road_sign_ext</name>
            </pin>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>feedbackOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Driver Module</name>
          <class_id>driver_module.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>action_from_scm</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_to_scm</name>
            </pin>
            <pin>
              <name>driver_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>TimerFilter</name>
          <class_id>timer_filters.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>action</name>
            </pin>
            <pin>
              <name>time_trigger_pin</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>TimerFilter Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>StateControlManagement</name>
          <class_id>state_control_management.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>feedbackMarkerDetectorIn</name>
            </pin>
            <pin>
              <name>feedbackIntersectionDetectorIn</name>
            </pin>
            <pin>
              <name>TriggerPin</name>
            </pin>
            <pin>
              <name>feedbackSelectSpeedIn</name>
            </pin>
            <pin>
              <name>feedbackTimerIn</name>
            </pin>
            <pin>
              <name>feedbackJuryCommIn</name>
            </pin>
            <pin>
              <name>feedbackUltrasonicACCIn</name>
            </pin>
            <pin>
              <name>feedbackLineSpecifierIn</name>
            </pin>
            <pin>
              <name>feedbackMoveToPointIn</name>
            </pin>
            <pin>
              <name>feedbackObstacleDetectorIn</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>ActionTimerOut</name>
            </pin>
            <pin>
              <name>ActionMarkerDetectorOut</name>
            </pin>
            <pin>
              <name>ActionJuryCommOut</name>
            </pin>
            <pin>
              <name>ActionIntersectionDetectorOut</name>
            </pin>
            <pin>
              <name>ActionSelectSpeedOut</name>
            </pin>
            <pin>
              <name>ActionUltrasonicACCOut</name>
            </pin>
            <pin>
              <name>ActionLightControlOut</name>
            </pin>
            <pin>
              <name>ActionLineSpecifierOut</name>
            </pin>
            <pin>
              <name>ActionMoveToPointOut</name>
            </pin>
            <pin>
              <name>ActionSpeedControllerOut</name>
            </pin>
            <pin>
              <name>ActionObstacleDetectorOut</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>StateControlManagement Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cLightControl</name>
          <class_id>light_control.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>setspeedInput</name>
            </pin>
            <pin>
              <name>carspeedInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>headLightOutput</name>
            </pin>
            <pin>
              <name>reverseLightOutput</name>
            </pin>
            <pin>
              <name>brakeLightOutput</name>
            </pin>
            <pin>
              <name>turnRightLightOutput</name>
            </pin>
            <pin>
              <name>turnLeftLightOutput</name>
            </pin>
            <pin>
              <name>hazardLightOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
            <pin>
              <name>car_pose</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cMoveToPoint</name>
          <class_id>move_to_point.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>car_pose_input</name>
            </pin>
            <pin>
              <name>sm_action_input</name>
            </pin>
            <pin>
              <name>goal_pose_input</name>
            </pin>
            <pin>
              <name>ls_steering_input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>speed_controller_output</name>
            </pin>
            <pin>
              <name>steering_controller_output</name>
            </pin>
            <pin>
              <name>feedback_struct_output</name>
            </pin>
            <pin>
              <name>reset_pid</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicMeanFilter</name>
          <class_id>ultrasonic_mean_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>UltrasonicInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>UltrasonicMeanOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>IntersectionDetectorFilterNew</name>
          <class_id>intersection_detector_new_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>RoadSignExtInput</name>
            </pin>
            <pin>
              <name>laserScannerInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
            <pin>
              <name>localGoalOutput</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>IntersectionDetectorFilterNew Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SelectSpeedFilter</name>
          <class_id>select_speed.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>LaneDetectionSpeed</name>
            </pin>
            <pin>
              <name>LaneDetectionSteering</name>
            </pin>
            <pin>
              <name>MoveToPointSpeed</name>
            </pin>
            <pin>
              <name>MoveToPointSteering</name>
            </pin>
            <pin>
              <name>ActionStructInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>OutputSpeed</name>
            </pin>
            <pin>
              <name>OutputSteeringAngle</name>
            </pin>
            <pin>
              <name>OutputFeedback</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputAction</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputFeedback</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputDebugWarpedVideo</name>
            </pin>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputDebugBirdVideo</name>
            </pin>
            <pin>
              <name>outputDebugMaskVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
            <pin>
              <name>outputVideo</name>
            </pin>
            <pin>
              <name>outputVideoImageRoi</name>
            </pin>
            <pin>
              <name>laserOut</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>UltrasonicACC Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ACC_Normal_video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ACC_pre_video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Audio Visualization</name>
          <class_id>audio_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>audio</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization_LaserOutput</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SpeedController</name>
          <class_id>speed_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>action_input</name>
            </pin>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cObjectSpecifier</name>
          <class_id>object_specifier.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>undistort_out</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>lanedetection_out</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>lanedetection_birdview</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_struct</name>
          <portname>jury_struct</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>maneuver_list</name>
          <portname>maneuver_list</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>trigger_pin</name>
          <portname>trigger_pin</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>left_wheel_in</name>
          <portname>left_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>right_wheel_in</name>
          <portname>right_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>audio_in</name>
          <portname>audio_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>driver_struct</name>
          <portname>driver_struct</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>headlight_out</name>
          <portname>headlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>reverselight_out</name>
          <portname>reverselight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>brakelight_out</name>
          <portname>brakelight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>turnrightlight_out</name>
          <portname>turnrightlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>turnleftlight_out</name>
          <portname>turnleftlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>hazardlight_out</name>
          <portname>hazardlight_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>road_sign</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_driverModule</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_from_fisheye_undistortion</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_marker_detector</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_ISD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_actionStop</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_TF</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_out_timer</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_markerDetector</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_isd</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_juryComm</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_LC</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laserscanner_relais1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_laneDetection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_laneDetection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_from_LD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_from_LD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>car_speed_from_carPose</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
        <sample_stream>
          <name>car_pose</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
        <sample_stream>
          <name>mtp_action_ss</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>goalpose_from_isd</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
        <sample_stream>
          <name>mtp_speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
        <sample_stream>
          <name>mtp_fb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
        <sample_stream>
          <name>action_SES</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_SES</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_from_USM</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>action_acc</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>feedback_acc</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>lanes_from_LD</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laneDetection_Video__stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_from_SES</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_from_SES</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_from_ses</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>LaneDetectionROIStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>LaneDetectionBirdStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>LaneDetectionMaskStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ACC_video_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>acc_pre_videostream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_1</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_2</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_3</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_4</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>MarkerDetectorNew.road_sign_ext_road_sign.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>road_sign</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_struct._Driver Module.jury_struct</name>
          <source_connector_path>
            <connector/>
            <component>jury_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuver_list._Driver Module.maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.feedback_to_scm_feedback_driverModule.</name>
          <source_connector_path>
            <connector>feedback_to_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_driverModule</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.driver_struct_driver_struct.</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driver_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_video_from_fisheye_undistortion.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._MarkerDetectorNew.input</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.feedbackOutput_feedback_marker_detector.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_marker_detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TimerFilter.feedback_feedback_TF.</name>
          <source_connector_path>
            <connector>feedback</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_TF</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._TimerFilter.TimerFilter Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TimerFilter Constructor</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_out_timer._TimerFilter.action</name>
          <source_connector_path>
            <connector/>
            <component>action_out_timer</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action</connector>
            <component>TimerFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_marker_detector._StateControlManagement.feedbackMarkerDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_marker_detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMarkerDetectorIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_ISD._StateControlManagement.feedbackIntersectionDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_ISD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackIntersectionDetectorIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>trigger_pin._StateControlManagement.TriggerPin</name>
          <source_connector_path>
            <connector/>
            <component>trigger_pin</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TriggerPin</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_actionStop._StateControlManagement.feedbackSelectSpeedIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_actionStop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackSelectSpeedIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionTimerOut_action_out_timer.</name>
          <source_connector_path>
            <connector>ActionTimerOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_out_timer</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionMarkerDetectorOut_action_markerDetector.</name>
          <source_connector_path>
            <connector>ActionMarkerDetectorOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_markerDetector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionJuryCommOut_action_juryComm.</name>
          <source_connector_path>
            <connector>ActionJuryCommOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_juryComm</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionIntersectionDetectorOut_action_isd.</name>
          <source_connector_path>
            <connector>ActionIntersectionDetectorOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_isd</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_TF._StateControlManagement.feedbackTimerIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_TF</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackTimerIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_juryComm._Driver Module.action_from_scm</name>
          <source_connector_path>
            <connector/>
            <component>action_juryComm</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_from_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_driverModule._StateControlManagement.feedbackJuryCommIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_driverModule</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackJuryCommIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_markerDetector._MarkerDetectorNew.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_markerDetector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionLightControlOut_action_LC.</name>
          <source_connector_path>
            <connector>ActionLightControlOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_LC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_LC._cLightControl.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_LC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.headLightOutput_headlight_out.</name>
          <source_connector_path>
            <connector>headLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>headlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.reverseLightOutput_reverselight_out.</name>
          <source_connector_path>
            <connector>reverseLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>reverselight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.brakeLightOutput_brakelight_out.</name>
          <source_connector_path>
            <connector>brakeLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>brakelight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.turnRightLightOutput_turnrightlight_out.</name>
          <source_connector_path>
            <connector>turnRightLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turnrightlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.turnLeftLightOutput_turnleftlight_out.</name>
          <source_connector_path>
            <connector>turnLeftLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turnleftlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.hazardLightOutput_hazardlight_out.</name>
          <source_connector_path>
            <connector>hazardLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>hazardlight_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._laserscanner_relais1.</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laserscanner_relais1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionLineSpecifierOut_action_laneDetection.</name>
          <source_connector_path>
            <connector>ActionLineSpecifierOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_laneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_laneDetection._StateControlManagement.feedbackLineSpecifierIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_laneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackLineSpecifierIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>left_wheel_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>left_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>right_wheel_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>right_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>car_speed_from_carPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_pose_Sample Stream_3.</name>
          <source_connector_path>
            <connector>car_pose</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>car_pose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._cMoveToPoint.car_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>car_pose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>car_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._cMoveToPoint.sm_action_input</name>
          <source_connector_path>
            <connector/>
            <component>mtp_action_ss</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>sm_action_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._cMoveToPoint.goal_pose_input</name>
          <source_connector_path>
            <connector/>
            <component>goalpose_from_isd</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>goal_pose_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionMoveToPointOut_mtp_action_ss.</name>
          <source_connector_path>
            <connector>ActionMoveToPointOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mtp_action_ss</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>mtp_fb._StateControlManagement.feedbackMoveToPointIn</name>
          <source_connector_path>
            <connector/>
            <component>mtp_fb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMoveToPointIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.steering_controller_output_Sample Stream_4.</name>
          <source_connector_path>
            <connector>steering_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.speed_controller_output_mtp_speed.</name>
          <source_connector_path>
            <connector>speed_controller_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mtp_speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cMoveToPoint.feedback_struct_output_mtp_fb.</name>
          <source_connector_path>
            <connector>feedback_struct_output</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mtp_fb</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionSelectSpeedOut_action_SES.</name>
          <source_connector_path>
            <connector>ActionSelectSpeedOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_SES</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_SES._feedback_actionStop.</name>
          <source_connector_path>
            <connector/>
            <component>feedback_SES</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_actionStop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._UltrasonicMeanFilter.UltrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicInput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicMeanFilter.UltrasonicMeanOutput_us_from_USM.</name>
          <source_connector_path>
            <connector>UltrasonicMeanOutput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>us_from_USM</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionUltrasonicACCOut_action_acc.</name>
          <source_connector_path>
            <connector>ActionUltrasonicACCOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>action_acc</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>feedback_acc._StateControlManagement.feedbackUltrasonicACCIn</name>
          <source_connector_path>
            <connector/>
            <component>feedback_acc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackUltrasonicACCIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>road_sign._IntersectionDetectorFilterNew.RoadSignExtInput</name>
          <source_connector_path>
            <connector/>
            <component>road_sign</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>RoadSignExtInput</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._IntersectionDetectorFilterNew.laserScannerInput</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserScannerInput</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>IntersectionDetectorFilterNew.feedbackOutput_feedback_ISD.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_ISD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_isd._IntersectionDetectorFilterNew.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_isd</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>IntersectionDetectorFilterNew.localGoalOutput_goalpose_from_isd.</name>
          <source_connector_path>
            <connector>localGoalOutput</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>goalpose_from_isd</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_from_LD._SelectSpeedFilter.LaneDetectionSteering</name>
          <source_connector_path>
            <connector/>
            <component>steering_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>LaneDetectionSteering</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._SelectSpeedFilter.MoveToPointSteering</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>MoveToPointSteering</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputFeedback_feedback_SES.</name>
          <source_connector_path>
            <connector>OutputFeedback</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_SES</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_SES._SelectSpeedFilter.ActionStructInput</name>
          <source_connector_path>
            <connector/>
            <component>action_SES</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ActionStructInput</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputSpeed_speed_from_SES.</name>
          <source_connector_path>
            <connector>OutputSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_from_SES</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>car_speed_from_carPose._cLightControl.carspeedInput</name>
          <source_connector_path>
            <connector/>
            <component>car_speed_from_carPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>carspeedInput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_1._StateControlManagement.StateControlManagement Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>StateControlManagement Constructor</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_laneDetection._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>action_laneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputFeedback_feedback_laneDetection.</name>
          <source_connector_path>
            <connector>outputFeedback</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_laneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_lanes_from_LD.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>lanes_from_LD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_steering_from_LD.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_from_LD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_speed_from_LD.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_from_LD</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugWarpedVideo_laneDetection_Video__stream.</name>
          <source_connector_path>
            <connector>outputDebugWarpedVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laneDetection_Video__stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_from_USM._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_from_USM</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>lanes_from_LD._UltrasonicACC.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>lanes_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.feedbackOutput_feedback_acc.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>feedback_acc</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>action_acc._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>action_acc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SelectSpeedFilter.OutputSteeringAngle_steering_from_SES.</name>
          <source_connector_path>
            <connector>OutputSteeringAngle</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_from_SES</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_from_SES._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>speed_from_SES</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_from_SES._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>steering_from_SES</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_speed_from_ses.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_from_ses</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_from_SES._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>steering_from_SES</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_2._IntersectionDetectorFilterNew.IntersectionDetectorFilterNew Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>IntersectionDetectorFilterNew Constructor</connector>
            <component>IntersectionDetectorFilterNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_3._UltrasonicACC.UltrasonicACC Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicACC Constructor</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_from_ses._cLightControl.setspeedInput</name>
          <source_connector_path>
            <connector/>
            <component>speed_from_ses</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>setspeedInput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_from_LD._cMoveToPoint.ls_steering_input</name>
          <source_connector_path>
            <connector/>
            <component>steering_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_steering_input</connector>
            <component>cMoveToPoint</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>LaneDetectionROIStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugBirdVideo_Sample Stream.</name>
          <source_connector_path>
            <connector>outputDebugBirdVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>LaneDetectionBirdStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugMaskVideo_LaneDetectionMaskStream.</name>
          <source_connector_path>
            <connector>outputDebugMaskVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>LaneDetectionMaskStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ACC_video_stream._ACC_Normal_video.video</name>
          <source_connector_path>
            <connector/>
            <component>ACC_video_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ACC_Normal_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.outputVideo_ACC_video_stream.</name>
          <source_connector_path>
            <connector>outputVideo</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ACC_video_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>acc_pre_videostream._ACC_pre_video.video</name>
          <source_connector_path>
            <connector/>
            <component>acc_pre_videostream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ACC_pre_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>audio_in._Audio Visualization.audio</name>
          <source_connector_path>
            <connector/>
            <component>audio_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>audio</connector>
            <component>Audio Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._SpeedController.action_input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_input</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionSpeedControllerOut_Sample Stream_1.</name>
          <source_connector_path>
            <connector>ActionSpeedControllerOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>car_speed_from_carPose._SpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>car_speed_from_carPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>mtp_speed._SelectSpeedFilter.MoveToPointSpeed</name>
          <source_connector_path>
            <connector/>
            <component>mtp_speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>MoveToPointSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SpeedController.actuator_output_Sample Stream_2.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_from_LD._OutputLimiter.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>speed_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OutputLimiter.car_speed_Sample Stream_3.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._SelectSpeedFilter.LaneDetectionSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>LaneDetectionSpeed</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._cCarPose.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_from_ses._SpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>speed_from_ses</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_4._SelectSpeedFilter.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>SelectSpeedFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._MarkerDetectorNew.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>lanes_from_LD._Sample Stream_6.</name>
          <source_connector_path>
            <connector/>
            <component>lanes_from_LD</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._cObjectSpecifier.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._cObjectSpecifier.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateControlManagement.ActionObstacleDetectorOut_Sample Stream_7.</name>
          <source_connector_path>
            <connector>ActionObstacleDetectorOut</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._StateControlManagement.feedbackObstacleDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackObstacleDetectorIn</connector>
            <component>StateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cObjectSpecifier.feedbackOutput_Sample Stream_8.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._cObjectSpecifier.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laserscanner_relais1._Sensor Visualization_LaserOutput.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laserscanner_relais1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization_LaserOutput</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_from_fisheye_undistortion._undistort_out.video</name>
          <source_connector_path>
            <connector/>
            <component>video_from_fisheye_undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>undistort_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laneDetection_Video__stream._lanedetection_out.video</name>
          <source_connector_path>
            <connector/>
            <component>laneDetection_Video__stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>lanedetection_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetectionBirdStream._lanedetection_birdview.video</name>
          <source_connector_path>
            <connector/>
            <component>LaneDetectionBirdStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>lanedetection_birdview</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>PID</name>
      <filters>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SpeedController</name>
          <class_id>speed_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>set</name>
          <class_id>file_writer.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>out</name>
          <class_id>file_writer.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>measured</name>
          <class_id>file_writer.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Media Description Display</name>
          <class_id>demo_qt_media_description_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>123</name>
            </pin>
            <pin>
              <name>ms</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Media Description Display_1</name>
          <class_id>demo_qt_media_description_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>ss</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaserPointerFollower</name>
          <class_id>laserpointer_follower.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputDebugBirdVideo</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>left_wheel_in</name>
          <portname>left_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>right_wheel_in</name>
          <portname>right_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>video</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>speed_sample</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_sample</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
          <deactivated>true</deactivated>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>steering_sample._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>steering_sample</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>left_wheel_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>left_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>right_wheel_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>right_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_sample._OutputLimiter.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>speed_sample</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OutputLimiter.car_speed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._SpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SpeedController.actuator_output_Sample Stream_2.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._FileWriter.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>set</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._FileWriter_2.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>measured</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._FileWriter_1.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_sample._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>speed_sample</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Demo Qt Media Description Display.123</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>123</connector>
            <component>Demo Qt Media Description Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._SpeedController.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._SpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Sample Stream_3.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._Demo Qt Media Description Display_1.ss</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ss</connector>
            <component>Demo Qt Media Description Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_5.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._LaserPointerFollower.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputSteering_steering_sample.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_sample</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputDebugBirdVideo_Sample Stream_6.</name>
          <source_connector_path>
            <connector>outputDebugBirdVideo</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputSpeed_speed_sample.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_sample</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>LaneDetection</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>id_bird</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>NormalVideo</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaserPointerFollower</name>
          <class_id>laserpointer_follower.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugBirdVideo</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>fisheye_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>video._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_fisheye_stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>fisheye_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_stream._speed.</name>
          <source_connector_path>
            <connector/>
            <component>speed_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._id_bird.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>id_bird</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>fisheye_stream._NormalVideo.video</name>
          <source_connector_path>
            <connector/>
            <component>fisheye_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>NormalVideo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>fisheye_stream._LaserPointerFollower.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>fisheye_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputDebugBirdVideo_Sample Stream.</name>
          <source_connector_path>
            <connector>outputDebugBirdVideo</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputSteering_steering_stream.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_stream._steering.</name>
          <source_connector_path>
            <connector/>
            <component>steering_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputSpeed_speed_stream.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>laser_vis</name>
      <filters>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Ella_Filter</name>
          <class_id>ella_filter.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Test_IN</name>
          <class_id>test_in.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Test_OUT</name>
          <class_id>test_out.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>laser_scanner._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Test_IN.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Test_IN</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Ella_Filter.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Ella_Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Ella_Filter.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Ella_Filter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Test_OUT.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Test_OUT</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>recording_andi</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputAction</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>UltrasonicACC Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicMeanFilter</name>
          <class_id>ultrasonic_mean_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>UltrasonicInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>UltrasonicMeanOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>basler_in</name>
          <portname>basler_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_in</name>
          <portname>laser_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>basler_out</name>
          <portname>basler_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>laser_out</name>
          <portname>laser_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>basler_in._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>basler_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_in._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>laser_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_Sample Stream_3.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._UltrasonicMeanFilter.UltrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicInput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicMeanFilter.UltrasonicMeanOutput_Sample Stream_4.</name>
          <source_connector_path>
            <connector>UltrasonicMeanOutput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_Sample Stream_5.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_Sample Stream_6.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._UltrasonicACC.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._UltrasonicACC.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_speed_out.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._basler_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>basler_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._laser_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laser_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>Nicos_EmergencyCarDetection</name>
      <filters>
        <filter>
          <name>Car Controller Nico</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Emergency Car Detection</name>
          <class_id>emergency_car_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>audio</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>mic_in</name>
          <portname>audio_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller Nico.speed_speed_out.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller Nico</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>mic_in._Emergency Car Detection.audio</name>
          <source_connector_path>
            <connector/>
            <component>mic_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>audio</connector>
            <component>Emergency Car Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>DontLookInHerePlease</name>
      <filters>
        <filter>
          <name>Netflix</name>
          <class_id>camera_calibration.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Show me some love</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>How Much is the fish</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Youtube</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>sexy videos</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>illegal stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>legal stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>sexy videos._illegal stream.</name>
          <source_connector_path>
            <connector/>
            <component>sexy videos</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>illegal stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>illegal stream._Netflix.video_rgb</name>
          <source_connector_path>
            <connector/>
            <component>illegal stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb</connector>
            <component>Netflix</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>illegal stream._Show me some love.video</name>
          <source_connector_path>
            <connector/>
            <component>illegal stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Show me some love</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>illegal stream._How Much is the fish.input</name>
          <source_connector_path>
            <connector/>
            <component>illegal stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>How Much is the fish</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>How Much is the fish.output_legal stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>How Much is the fish</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>legal stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>legal stream._Youtube.video</name>
          <source_connector_path>
            <connector/>
            <component>legal stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Youtube</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>OpenChallenge</name>
      <filters>
        <filter>
          <name>OCMarkerDetectorNew</name>
          <class_id>oc_marker_detector_new.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>feedbackOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OCStateControlManagement</name>
          <class_id>oc_state_control_management.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>feedbackMarkerDetectorIn</name>
            </pin>
            <pin>
              <name>feedbackJuryCommIn</name>
            </pin>
            <pin>
              <name>feedbackLineSpecifierIn</name>
            </pin>
            <pin>
              <name>feedbackUltrasonicACCIn</name>
            </pin>
            <pin>
              <name>TriggerPin</name>
            </pin>
            <pin>
              <name>feedbackSelectSpeedIn</name>
            </pin>
            <pin>
              <name>feedbackMoveToPointIn</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>ActionMarkerDetectorOut</name>
            </pin>
            <pin>
              <name>ActionJuryCommOut</name>
            </pin>
            <pin>
              <name>ActionLineSpecifierOut</name>
            </pin>
            <pin>
              <name>ActionUltrasonicACCOut</name>
            </pin>
            <pin>
              <name>ActionSelectSpeedOut</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>OCStateControlManagement Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Driver Module</name>
          <class_id>driver_module.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>action_from_scm</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_to_scm</name>
            </pin>
            <pin>
              <name>driver_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cCarPose</name>
          <class_id>car_pose.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>iner_measure_data</name>
            </pin>
            <pin>
              <name>left_wheel_data</name>
            </pin>
            <pin>
              <name>right_wheel_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputAction</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputFeedback</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>OutputLimiter</name>
          <class_id>output_limiter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed_controller</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>car_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SpeedController</name>
          <class_id>speed_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
            <pin>
              <name>action_input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaserPointerFollower</name>
          <class_id>laserpointer_follower.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSteering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedbackOutput</name>
            </pin>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>UltrasonicACC Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>MegaMonsterSelector</name>
          <class_id>xiangfei_is_cool.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>BinhSpeed</name>
            </pin>
            <pin>
              <name>BinhSteering</name>
            </pin>
            <pin>
              <name>ActionStructInput</name>
            </pin>
            <pin>
              <name>AndreasSpeed</name>
            </pin>
            <pin>
              <name>AndreasSteering</name>
            </pin>
            <pin>
              <name>JudithSpeed</name>
            </pin>
            <pin>
              <name>JudithSteering</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>OutputSpeed</name>
            </pin>
            <pin>
              <name>OutputSteeringAngle</name>
            </pin>
            <pin>
              <name>OutputFeedback</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>TrafficLightSimluator</name>
          <class_id>traffic_light_simluator.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>feedback_struct_output</name>
            </pin>
            <pin>
              <name>outputDebugBirdVideo</name>
            </pin>
            <pin>
              <name>m_WriterDebugMaskVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_2</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_struct</name>
          <portname>jury_struct</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>maneuver_list</name>
          <portname>maneuver_list</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>left_wheel_in</name>
          <portname>left_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>right_wheel_in</name>
          <portname>right_wheel_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>driver_struct</name>
          <portname>driver_struct</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_9</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_relais</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_11</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_12</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_13</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_14</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_15</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_16</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_17</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_18</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_19</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_20</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_21</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_22</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_1</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_2</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>video_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._OCMarkerDetectorNew.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>OCMarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCMarkerDetectorNew.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>OCMarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCMarkerDetectorNew.feedbackOutput_Sample Stream_3.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>OCMarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._OCStateControlManagement.feedbackMarkerDetectorIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMarkerDetectorIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._OCMarkerDetectorNew.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>OCMarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCStateControlManagement.ActionMarkerDetectorOut_Sample Stream_2.</name>
          <source_connector_path>
            <connector>ActionMarkerDetectorOut</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_struct._Driver Module.jury_struct</name>
          <source_connector_path>
            <connector/>
            <component>jury_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuver_list._Driver Module.maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Driver Module.action_from_scm</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>action_from_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCStateControlManagement.ActionJuryCommOut_Sample Stream_4.</name>
          <source_connector_path>
            <connector>ActionJuryCommOut</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._OCStateControlManagement.feedbackJuryCommIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackJuryCommIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.feedback_to_scm_Sample Stream_5.</name>
          <source_connector_path>
            <connector>feedback_to_scm</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Driver Module.driver_struct_driver_struct.</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Driver Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driver_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._cCarPose.iner_measure_data</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_measure_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>left_wheel_in._cCarPose.left_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>left_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>right_wheel_in._cCarPose.right_wheel_data</name>
          <source_connector_path>
            <connector/>
            <component>right_wheel_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_data</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCStateControlManagement.ActionLineSpecifierOut_Sample Stream_6.</name>
          <source_connector_path>
            <connector>ActionLineSpecifierOut</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputFeedback_Sample Stream_7.</name>
          <source_connector_path>
            <connector>outputFeedback</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._OCStateControlManagement.feedbackLineSpecifierIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackLineSpecifierIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_Sample Stream_8.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._OutputLimiter.speed_controller</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_controller</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cCarPose.car_speed_Sample Stream_9.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>cCarPose</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OutputLimiter.car_speed_Sample Stream_10.</name>
          <source_connector_path>
            <connector>car_speed</connector>
            <component>OutputLimiter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._SpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SpeedController.actuator_output_speed_out.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._video_relais.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>video_relais</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_relais._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_relais</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_relais._LaserPointerFollower.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_relais</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._OCStateControlManagement.feedbackUltrasonicACCIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackUltrasonicACCIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCStateControlManagement.ActionUltrasonicACCOut_Sample Stream_12.</name>
          <source_connector_path>
            <connector>ActionUltrasonicACCOut</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_12</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_12._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_12</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.feedbackOutput_Sample Stream_11.</name>
          <source_connector_path>
            <connector>feedbackOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_relais._UltrasonicACC.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_relais</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._OCStateControlManagement.OCStateControlManagement Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>OCStateControlManagement Constructor</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._MegaMonsterSelector.BinhSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>BinhSpeed</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserPointerFollower.outputSteering_Sample Stream_13.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaserPointerFollower</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_13</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_13._MegaMonsterSelector.BinhSteering</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_13</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>BinhSteering</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MegaMonsterSelector.OutputSpeed_Sample Stream_14.</name>
          <source_connector_path>
            <connector>OutputSpeed</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_14</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_14._SpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_14</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>SpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MegaMonsterSelector.OutputSteeringAngle_steering_out.</name>
          <source_connector_path>
            <connector>OutputSteeringAngle</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MegaMonsterSelector.OutputFeedback_Sample Stream_15.</name>
          <source_connector_path>
            <connector>OutputFeedback</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_15</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_15._OCStateControlManagement.feedbackSelectSpeedIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_15</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackSelectSpeedIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>OCStateControlManagement.ActionSelectSpeedOut_Sample Stream_16.</name>
          <source_connector_path>
            <connector>ActionSelectSpeedOut</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_16</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_16._MegaMonsterSelector.ActionStructInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_16</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ActionStructInput</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_1._MegaMonsterSelector.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_17._MegaMonsterSelector.AndreasSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_17</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>AndreasSpeed</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_Sample Stream_18.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_18</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_18._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_18</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_Sample Stream_19.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_19</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_19._UltrasonicACC.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_19</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_Sample Stream_17.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_17</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_18._MegaMonsterSelector.AndreasSteering</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_18</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>AndreasSteering</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_2._UltrasonicACC.UltrasonicACC Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicACC Constructor</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_relais._TrafficLightSimluator.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_relais</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TrafficLightSimluator.feedback_struct_output_Sample Stream_20.</name>
          <source_connector_path>
            <connector>feedback_struct_output</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_20</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_20._OCStateControlManagement.feedbackMoveToPointIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_20</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>feedbackMoveToPointIn</connector>
            <component>OCStateControlManagement</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._MegaMonsterSelector.JudithSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>JudithSpeed</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_18._MegaMonsterSelector.JudithSteering</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_18</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>JudithSteering</connector>
            <component>MegaMonsterSelector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TrafficLightSimluator.outputDebugBirdVideo_Sample Stream_21.</name>
          <source_connector_path>
            <connector>outputDebugBirdVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_21</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_21._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_21</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>TrafficLightSimluator.m_WriterDebugMaskVideo_Sample Stream_22.</name>
          <source_connector_path>
            <connector>m_WriterDebugMaskVideo</connector>
            <component>TrafficLightSimluator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_22</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_22._Demo Qt Video Display_2.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_22</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>ImABarbieGirl</name>
      <filters>
        <filter>
          <name>ImABarbieGirl</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>InABarbieWOooorld</name>
          <class_id>object_specifier.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ItsFantastic</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laserscanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed</name>
          <portname>speed_Ella</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering</name>
          <portname>steering_Ella</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>BarbieStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>BarbieStream2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>video._ImABarbieGirl.input</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>ImABarbieGirl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ImABarbieGirl.output_BarbieStream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>ImABarbieGirl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>BarbieStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>BarbieStream._cObjectSpecifier.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>BarbieStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>InABarbieWOooorld</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laserscanner._cObjectSpecifier.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laserscanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>InABarbieWOooorld</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>InABarbieWOooorld.outputDebugVideo_BarbieStream2.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>InABarbieWOooorld</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>BarbieStream2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>BarbieStream2._ItsFantastic.video</name>
          <source_connector_path>
            <connector/>
            <component>BarbieStream2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ItsFantastic</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._InABarbieWOooorld.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>InABarbieWOooorld</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_speed.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_steering.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>testACC</name>
      <filters>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputVideo</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>UltrasonicACC Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_in</name>
          <portname>us_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>laser_scanner._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_in._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._UltrasonicACC.UltrasonicACC Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicACC Constructor</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.outputVideo_Sample Stream_1.</name>
          <source_connector_path>
            <connector>outputVideo</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>TEST_23_05</name>
      <filters>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputDebugWarpedVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video</name>
          <portname>video_Ella</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering</name>
          <portname>steering_Ella</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed</name>
          <portname>speed_Ella</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Sample Stream_2._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_1.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.steering_Sample Stream_3.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._steering.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_6.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._speed.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>video_output_test</name>
      <filters>
        <filter>
          <name>video_output</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputAction</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputDebugWarpedVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ld_video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_tongo_ella_binh</name>
          <portname>video_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>video_tongo_ella_binh._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>video_tongo_ella_binh</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._video_output.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>video_output</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._ld_video.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ld_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_3.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream_4.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.speed_Sample Stream_5.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>test_07102019</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputAction</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicACC</name>
          <class_id>ultrasonic_acc.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>ultrasonicInput</name>
            </pin>
            <pin>
              <name>targetSpeedInput</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
            <pin>
              <name>steeringAngleInput</name>
            </pin>
            <pin>
              <name>actionInput</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>targetSpeedOutput</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>UltrasonicACC Constructor</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>UltrasonicMeanFilter</name>
          <class_id>ultrasonic_mean_filter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>UltrasonicInput</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>UltrasonicMeanOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_Ella</name>
          <portname>video_Ella</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_Ella</name>
          <portname>laser_Ella</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>us_Ella</name>
          <portname>us_Ella</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_Ella</name>
          <portname>speed_Ella</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_Ella</name>
          <portname>steering_Ella</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller.outputAction_Sample Stream.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_Ella._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_4.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_Ella._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_Ella._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>laser_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._UltrasonicACC.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicACC.targetSpeedOutput_speed_Ella.</name>
          <source_connector_path>
            <connector>targetSpeedOutput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_Ella</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_Sample Stream_3.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._UltrasonicACC.targetSpeedInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>targetSpeedInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_Sample Stream_5.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._UltrasonicACC.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>us_Ella._UltrasonicMeanFilter.UltrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>us_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicInput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>UltrasonicMeanFilter.UltrasonicMeanOutput_Sample Stream_6.</name>
          <source_connector_path>
            <connector>UltrasonicMeanOutput</connector>
            <component>UltrasonicMeanFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._UltrasonicACC.ultrasonicInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonicInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._UltrasonicACC.UltrasonicACC Constructor</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>UltrasonicACC Constructor</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_Sample Stream_7.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._UltrasonicACC.steeringAngleInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steeringAngleInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._steering_Ella.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_Ella</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._UltrasonicACC.actionInput</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>actionInput</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._UltrasonicACC.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>UltrasonicACC</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>test2_0710</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputAction</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputLines</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cEmergencyBreak</name>
          <class_id>emergency_break.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputSpeed</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>roadsignIn</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>switchLightON_OUT</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cObjectSpecifier</name>
          <class_id>object_specifier.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laserscannerIn</name>
            </pin>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_123456</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1222</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>MarkerDetectorNew</name>
          <class_id>marker_detector_new.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>laneDetectionLine</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>road_sign_ext</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cLightControl</name>
          <class_id>light_control.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>switchLightON</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>headLightOutput</name>
            </pin>
            <pin>
              <name>brakeLightOutput</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_Ella</name>
          <portname>video_Ella</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser</name>
          <portname>laser_Ella</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>ultrasonic</name>
          <portname>us_Ella</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed_Ella</name>
          <portname>speed_Ella</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_Ella</name>
          <portname>steering_Ella</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>Head light</name>
          <portname>head_light</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>break_light</name>
          <portname>break_light</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_9</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Car Controller.outputAction_Sample Stream.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_Ella._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_1.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputDebugVideo_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cEmergencyBreak.outputSpeed_speed_Ella.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_Ella</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser._cEmergencyBreak.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser._cObjectSpecifier.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_Ella._cObjectSpecifier.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>video_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cObjectSpecifier.outputDebugVideo_Sample Stream_4.</name>
          <source_connector_path>
            <connector>outputDebugVideo</connector>
            <component>cObjectSpecifier</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Demo Qt Video Display_123456.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_123456</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Demo Qt Video Display_1222.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1222</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_Ella._MarkerDetectorNew.input</name>
          <source_connector_path>
            <connector/>
            <component>video_Ella</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.output_Sample Stream_5.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputLines_Sample Stream_6.</name>
          <source_connector_path>
            <connector>outputLines</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._MarkerDetectorNew.laneDetectionLine</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laneDetectionLine</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MarkerDetectorNew.road_sign_ext_Sample Stream_7.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>MarkerDetectorNew</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._cEmergencyBreak.roadsignIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>roadsignIn</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.headLightOutput_Head light.</name>
          <source_connector_path>
            <connector>headLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Head light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cLightControl.brakeLightOutput_break_light.</name>
          <source_connector_path>
            <connector>brakeLightOutput</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>break_light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSteering_Sample Stream_8.</name>
          <source_connector_path>
            <connector>outputSteering</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._cEmergencyBreak.inputSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputSpeed</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._steering_Ella.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_Ella</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_Sample Stream_9.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cEmergencyBreak.switchLightON_OUT_Sample Stream_3.</name>
          <source_connector_path>
            <connector>switchLightON_OUT</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._cLightControl.switchLightON</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>switchLightON</connector>
            <component>cLightControl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser._Sample Stream_10.</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ultrasonic._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>ultrasonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>binhs speed test</name>
      <filters>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>outputAction</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>cEmergencyBreak</name>
          <class_id>emergency_break.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputSpeed</name>
            </pin>
            <pin>
              <name>laserscannerIn</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSpeed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
            <pin>
              <name>inputAction</name>
            </pin>
            <pin>
              <name>inputLaserScanner</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputSpeed</name>
            </pin>
            <pin>
              <name>outputSteering</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>laser</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>video</name>
          <portname>video_Ella</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed</name>
          <portname>speed_Ella</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>laser._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._cEmergencyBreak.laserscannerIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserscannerIn</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>cEmergencyBreak.outputSpeed_Sample Stream_2.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._speed.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_3.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Car Controller.outputAction_Sample Stream_4.</name>
          <source_connector_path>
            <connector>outputAction</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._LaneDetection.inputAction</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputAction</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser._LaneDetection.inputLaserScanner</name>
          <source_connector_path>
            <connector/>
            <component>laser</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputLaserScanner</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneDetection.outputSpeed_Sample Stream.</name>
          <source_connector_path>
            <connector>outputSpeed</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._cEmergencyBreak.inputSpeed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputSpeed</connector>
            <component>cEmergencyBreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>test_steering_2310</name>
      <filters>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Demo Qt Video Display_1</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>inputVideo</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>outputDebugVideo</name>
            </pin>
            <pin>
              <name>outputDebugMaskVideo</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>videoIn</name>
          <portname>video_Ella</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Sample Stream._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>videoIn._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>videoIn</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream_2.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._LaneDetection.inputVideo</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>inputVideo</connector>
            <component>LaneDetection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>Kamera_Demo</name>
      <filters>
        <filter>
          <name>Demo Qt Video Display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>Kamera</name>
          <portname>Ella_Kamera_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Kamera._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Kamera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Demo Qt Video Display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>test</name>
      <filters>
        <filter>
          <name>Ella_Filter</name>
          <class_id>ella_filter.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams/>
      <active_runners/>
      <binding_proxys/>
      <connections/>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>default_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>TriggerSignalGenerator</name>
          <class_id>signal_value_generator.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
            <pin>
              <name>open_drive_map</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Microphone</name>
          <class_id>microphone.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>audio</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>trigger_pin</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>video_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>left_wheel_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>right_wheel_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>audio_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>road_sign_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>driver_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>headlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>reverselight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>brakelight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turnrightlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turnleftlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>hazardlight_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>reverse_light</name>
            </pin>
            <pin>
              <name>brake_light</name>
            </pin>
            <pin>
              <name>turn_signal_right</name>
            </pin>
            <pin>
              <name>turn_signal_left</name>
            </pin>
            <pin>
              <name>hazard_light</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>TriggerSignalGenerator.output_Filter Graph Dock.trigger_pin</name>
          <source_connector_path>
            <connector>output</connector>
            <component>TriggerSignalGenerator</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger_pin</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.vide_rgb</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_Filter Graph Dock.jury_struct</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_Filter Graph Dock.maneuver_list</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Binding Proxy.</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy._Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.driver_struct_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_scanner</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.headlight_out_Arduino Actuator.head_light</name>
          <source_connector_path>
            <connector>headlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.reverselight_out_Arduino Actuator.reverse_light</name>
          <source_connector_path>
            <connector>reverselight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>reverse_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.brakelight_out_Arduino Actuator.brake_light</name>
          <source_connector_path>
            <connector>brakelight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>brake_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turnrightlight_out_Arduino Actuator.turn_signal_right</name>
          <source_connector_path>
            <connector>turnrightlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_right</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turnleftlight_out_Arduino Actuator.turn_signal_left</name>
          <source_connector_path>
            <connector>turnleftlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_left</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.hazardlight_out_Arduino Actuator.hazard_light</name>
          <source_connector_path>
            <connector>hazardlight_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>hazard_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_Filter Graph Dock.imu_in</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Filter Graph Dock.left_wheel_in</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>left_wheel_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Filter Graph Dock.right_wheel_in</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>right_wheel_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Microphone.audio_Filter Graph Dock.audio_in</name>
          <source_connector_path>
            <connector>audio</connector>
            <component>Microphone</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>audio_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.road_sign_map_Filter Graph Dock.road_sign_map</name>
          <source_connector_path>
            <connector>road_sign_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.open_drive_map_Filter Graph Dock.map</name>
          <source_connector_path>
            <connector>open_drive_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>recording_andi</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>basler_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>basler_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>basler_out</name>
            </pin>
            <pin>
              <name>laser_out</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.basler_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_in</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.sterring_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.basler_out_ADTFDAT File Recorder.basler_out</name>
          <source_connector_path>
            <connector>basler_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_out</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.laser_out_ADTFDAT File Recorder.laser_out</name>
          <source_connector_path>
            <connector>laser_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_out</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>Nicos_EmergencyCarDetection</name>
      <streaming_sources>
        <streaming_source>
          <name>Microphone_Nico</name>
          <class_id>microphone.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>audio</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>audio_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Microphone_Nico.audio_Filter Graph Dock.audio_in</name>
          <source_connector_path>
            <connector>audio</connector>
            <component>Microphone_Nico</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>audio_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>0710_Ella_test</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>video_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>us_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>uvid_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>speed_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_Ella</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>head_light</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>brake_light</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.video_Ella</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_Ella</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_Ella_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_Ella</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_Ella_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_Ella</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.laser_Ella</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_Ella</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.us_Ella</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_Ella</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.head_light_Arduino Actuator.head_light</name>
          <source_connector_path>
            <connector>head_light</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>Kamera_Demo</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>Ella_Kamera_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.Ella_Kamera_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>Ella_Kamera_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
